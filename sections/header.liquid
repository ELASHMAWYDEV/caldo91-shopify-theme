<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link
  rel="stylesheet"
  href="{{ 'component-cart-notification.css' | asset_url }}"
  media="print"
  onload="this.media='all'"
>

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

<!-- Include Lottie library in the head -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.9.6/lottie.min.js" defer></script>

<style>
  header-drawer {
    justify-self: start;
    margin-left: -1.2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }

  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 60px;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 100;
    transition: background-color 0.3s ease, padding 0.3s ease;
  }

  .header--scrolled {
    background-color: rgba(0, 0, 0, 0.92);
    padding: 15px 60px;
  }

  .header__left,
  .header__center,
  .header__right {
    display: flex;
    align-items: center;
  }

  .header__left,
  .header__right {
    flex: 1;
  }

  .header__center {
    flex: 2;
    justify-content: center;
  }

  .header__right {
    justify-content: flex-end;
  }

  .header__menu-button {
    background: transparent;
    border: none;
    padding: 10px;
    cursor: pointer;
    color: white;
    display: flex;
    align-items: center;
    gap: 8px;
    transition: opacity 0.3s ease;
    font-family: 'Helvetica Neue', sans-serif;
    position: relative;
    z-index: 1001;
  }

  .header__menu-button:hover {
    opacity: 0.8;
  }

  .header__menu-icon {
    width: 24px;
    height: 24px;
  }

  .header__menu-text {
    font-size: 14px;
    font-weight: 300;
    letter-spacing: 1px;
    text-transform: uppercase;
  }

  .header__logo {
    font-size: 28px;
    font-weight: 200;
    color: white;
    text-decoration: none;
    letter-spacing: 1px;
    font-family: 'Helvetica Neue', sans-serif;
  }

  .header__icon-link {
    color: white;
    text-decoration: none;
    margin-left: 20px;
    transition: opacity 0.3s ease;
    position: relative;
  }

  .header__icon-link--mobile-search {
    display: none; /* Hidden by default */
    margin-left: 15px; /* Smaller margin between menu and search */
  }

  .header__icon-link:hover {
    opacity: 0.8;
  }

  @media screen and (max-width: 749px) {
    .header {
      padding: 0px 20px; /* Slightly reduced side padding */
    }

    .header--scrolled {
      padding: 0px 20px; /* Consistent with reduced padding */
    }

    .header__menu-button {
      padding: 8px 0 8px 8px; /* Adjust padding for better mobile alignment */
    }

    .header__icon-link--mobile-search {
      display: flex; /* Show on mobile */
      margin-left: 10px; /* Smaller margin between menu and search */
    }

    .header__icon-link--desktop-search {
      display: none; /* Hide on mobile */
    }

    .header__left {
      display: flex;
      align-items: center;
      justify-content: flex-start;
      min-width: 80px; /* Give the left section a minimum width */
      flex: 1;
    }

    .header__right {
      min-width: 80px; /* Give the right section a minimum width to balance the header */
      justify-content: flex-end;
      flex: 1;
    }

    .header__center {
      flex: 2; /* Balance the center section */
      justify-content: center;
      margin: 0 auto;
    }

    .header__logo {
      font-size: 22px;
      display: flex;
      justify-content: center;
      width: 100%;
    }

    .header__heading-logo-wrapper {
      margin: 0 auto;
    }

    .header__icon-link {
      margin-left: 15px;
    }

    .header__icon {
      width: 20px;
      height: 20px;
    }
  }

  .header__icon {
    width: 24px;
    height: 24px;
  }

  .cart-count-bubble {
    position: absolute;
    top: -6px;
    right: -6px;
    background-color: #ff4c4c;
    color: white;
    font-size: 10px;
    font-weight: 600;
    min-width: 18px;
    height: 18px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: 'Helvetica Neue', sans-serif;
    padding: 0 2px;
    box-sizing: border-box;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    animation: cart-bubble-pulse 0.5s ease-out;
  }

  @keyframes cart-bubble-pulse {
    0% { transform: scale(0.8); opacity: 0; }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); opacity: 1; }
  }

  @media screen and (max-width: 990px) {
    .header {
      padding: 8px 25px;
    }

    .header--scrolled {
      padding: 6px 25px;
    }

    .header__menu-text {
      display: none;
    }

    .header__logo {
      font-size: 24px;
    }

    .header__icon {
      width: 22px;
      height: 22px;
    }
  }

  @media screen and (max-width: 749px) {
    .header__logo {
      font-size: 22px;
    }

    .header__icon-link {
      margin-left: 15px;
    }

    .header__icon {
      width: 20px;
      height: 20px;
    }
  }

  .header__heading-logo-wrapper {
    max-width: 100%;
    display: block;
    width: {{ settings.logo_width }}px;
  }

  .header__heading-logo {
    display: block;
    width: 100%;
    height: auto;
  }

  .header__icons {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .header__icon {
    color: rgba(var(--color-foreground));
    height: 4.4rem;
    display: flex;
    align-items: center;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }

    .header__right-section {
      gap: 0.5rem;
    }

  }

  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  /* Floating and transparent header styles */
  .header-wrapper {
    position: absolute;
    width: 100%;
    z-index: 10;
    transition: background-color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
  }

  /* Default transparent background but with text colored according to the scheme */
  .header-wrapper--transparent {
    background: transparent !important;
    border-bottom: none !important;
  }

  /* Scrolled header styles - fixed position with background */
  .header-wrapper.scrolled-past-header {
    position: fixed;
    top: 0;
    background: rgba(var(--color-background)) !important;
    border-bottom: 1px solid rgba(var(--color-foreground), 0.08) !important;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  /* Add these styles for non-home pages */
  .header-wrapper--not-home {
    position: relative;
    margin-bottom: 50px;
  }

  .header-wrapper--not-home .header {
    background: rgba(var(--color-background));
  }

  .header {
    background: transparent;
    transition: background-color 0.3s ease;
  }

  /* Text color based on color scheme */
  .header *, .header__icon {
    color: rgba(var(--color-foreground));
    transition: color 0.3s ease, text-shadow 0.3s ease;
  }

  /* For transparent header on dark backgrounds, add option to force light text */
  .header-wrapper--transparent:not(.header-wrapper--scrolled) .header *,
  .header-wrapper--transparent:not(.header-wrapper--scrolled) .header__icon {
    color: #ffffff;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  }

  /* Reset text-shadow when scrolled */
  .scrolled-past-header .header *,
  .scrolled-past-header .header__icon,
  .header-wrapper--scrolled .header *,
  .header-wrapper--scrolled .header__icon {
    text-shadow: none;
    /* This ensures scrolled header uses the color scheme foreground color */
    color: rgba(var(--color-foreground));
  }

  /* Logo and Lottie animation container styles */
  .header__heading-logo-container {
    position: relative;
    width: 100%;
    height: 100%;
  }

  /* Regular logo */
  .header__heading-logo-wrapper {
    max-width: 100%;
    display: block;
    width: {{ settings.logo_width }}px;
    transition: opacity 0.3s ease;
  }

  /* Lottie animation container */
  .header__heading-logo-animation {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    /* We'll set a size directly instead of using transform scale */
    transform: none;
    transform-origin: center center;
  }

  /* Target the SVG that Lottie creates inside the animation container */
  .header__heading-logo-animation svg {
    height: 90px !important;
    width: auto !important;
  }

  /* Responsive handling is still needed for proper positioning */
  @media screen and (max-width: 749px) {
    .header__heading-logo-animation {
      /* Center alignment adjustments for mobile */
      justify-content: center;
    }
  }

  @media screen and (min-width: 750px) and (max-width: 989px) {
    .header__heading-logo-animation {
      /* Center alignment for tablets */
      justify-content: center;
    }
  }

  @media screen and (min-width: 990px) {
    .header__heading-logo-animation {
      /* Center alignment for desktop */
      justify-content: center;
    }
  }

  /* When scrolled, hide the regular logo and show the animation */
  .scrolled-past-header .header__heading-logo-wrapper {
    opacity: 0;
  }

  .scrolled-past-header .header__heading-logo-animation {
    opacity: 1;
  }

  /* For header--scrolled class (used by our JavaScript) */
  .header--scrolled .header__heading-logo-wrapper {
    opacity: 0;
  }

  .header--scrolled .header__heading-logo-animation {
    opacity: 1;
  }

  /* Fullscreen Menu Styles */
  .fullscreen-menu {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-color: #ffffff;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.5s ease, visibility 0.5s ease;
    overflow: auto; /* Enable scrolling */
  }

  .fullscreen-menu--open {
    opacity: 1;
    visibility: visible;
  }

  .fullscreen-menu__inner {
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 80px 60px;
    box-sizing: border-box;
    overflow-y: auto; /* Enable vertical scrolling */
  }

  .fullscreen-menu__content {
    display: flex;
    flex-direction: row;
    width: 100%;
    max-width: 1400px;
    margin: 0 auto;
    position: relative;
  }

  .fullscreen-menu__close-button {
    position: absolute;
    top: -40px;
    right: 0;
    background: transparent;
    border: none;
    padding: 10px;
    cursor: pointer;
    color: #000000;
    z-index: 10;
    transition: transform 0.3s ease, opacity 0.3s ease;
  }

  .fullscreen-menu__close-button:hover {
    opacity: 0.8;
    transform: rotate(90deg);
  }

  .fullscreen-menu__close-icon {
    width: 32px;
    height: 32px;
  }

  .fullscreen-menu__left {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding-right: 60px;
  }

  .fullscreen-menu__right {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-end;
    padding-left: 60px;
  }

  .fullscreen-menu__shop-all {
    font-size: 14px;
    font-weight: 300;
    color: rgba(0, 0, 0, 0.6);
    text-transform: uppercase;
    letter-spacing: 3px;
    margin-bottom: 40px;
    font-family: 'Helvetica Neue', sans-serif;
  }

  .fullscreen-menu__category-list {
    list-style: none;
    padding: 0;
    margin: 0;
    max-height: 60vh; /* Limit height to enable scrolling when many items */
    overflow-y: auto; /* Enable vertical scrolling if needed */
  }

  .fullscreen-menu__category-item {
    margin-bottom: 22px;
    position: relative;
    overflow: hidden;
  }

  .fullscreen-menu__category-link {
    font-size: 42px;
    font-weight: 200;
    color: #000000;
    text-decoration: none;
    text-transform: uppercase;
    transition: color 0.3s ease, transform 0.3s ease;
    display: inline-block;
    letter-spacing: 1px;
    font-family: 'Helvetica Neue', sans-serif;
    position: relative;
    padding-bottom: 3px;
  }

  .fullscreen-menu__category-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: #000000;
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s ease;
  }

  .fullscreen-menu__category-link:hover {
    color: rgba(0, 0, 0, 0.7);
  }

  .fullscreen-menu__category-link:hover::after {
    transform: scaleX(1);
    transform-origin: left;
  }

  .fullscreen-menu__footer-links {
    display: flex;
    flex-direction: column;
    gap: 18px;
    margin-top: auto;
    padding-top: 50px;
  }

  .fullscreen-menu__footer-link {
    font-size: 14px;
    color: rgba(0, 0, 0, 0.7);
    text-decoration: none;
    transition: color 0.3s ease, transform 0.3s ease;
    font-family: 'Helvetica Neue', sans-serif;
    position: relative;
    display: inline-block;
    padding-bottom: 2px;
  }

  .fullscreen-menu__footer-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: rgba(0, 0, 0, 0.7);
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s ease;
  }

  .fullscreen-menu__footer-link:hover {
    color: #000000;
  }

  .fullscreen-menu__footer-link:hover::after {
    transform: scaleX(1);
    transform-origin: left;
  }

  .fullscreen-menu__browse-more {
    font-size: 68px;
    font-weight: 200;
    color: #000000;
    margin-bottom: 60px;
    text-align: right;
    font-family: 'Helvetica Neue', sans-serif;
    letter-spacing: 1px;
    line-height: 1;
  }

  .fullscreen-menu__actions {
    margin-bottom: 80px;
    display: flex;
    justify-content: flex-end;
  }

  .fullscreen-menu__login-button {
    display: flex;
    align-items: center;
    background-color: transparent;
    color: #000000;
    text-decoration: none;
    padding: 12px 40px;
    border-radius: 0;
    font-weight: 300;
    transition: background-color 0.3s ease;
    font-family: 'Helvetica Neue', sans-serif;
    letter-spacing: 1px;
    border: 1px solid rgba(0, 0, 0, 0.3);
    font-size: 15px;
  }

  .fullscreen-menu__login-button:hover {
    background-color: rgba(0, 0, 0, 0.05);
  }

  .fullscreen-menu__login-arrow {
    width: 18px;
    height: 18px;
    margin-left: 12px;
    transition: transform 0.3s ease;
  }

  .fullscreen-menu__login-button:hover .fullscreen-menu__login-arrow {
    transform: translateX(5px);
  }

  .fullscreen-menu__locale {
    display: flex;
    gap: 15px;
  }

  .fullscreen-menu__locale-selector {
    position: relative;
  }

  .fullscreen-menu__selector-button {
    display: flex;
    align-items: center;
    background-color: transparent;
    border: 1px solid rgba(0, 0, 0, 0.15);
    border-radius: 0;
    color: rgba(0, 0, 0, 0.8);
    padding: 8px 16px;
    font-size: 13px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: 'Helvetica Neue', sans-serif;
    letter-spacing: 0.5px;
    font-weight: 300;
  }

  .fullscreen-menu__selector-button:hover {
    background-color: rgba(0, 0, 0, 0.05);
    color: #000000;
  }

  .fullscreen-menu__selector-arrow {
    width: 10px;
    height: 10px;
    margin-left: 8px;
    transition: transform 0.3s ease;
  }

  .fullscreen-menu__selector-button:hover .fullscreen-menu__selector-arrow {
    transform: translateY(2px);
  }

  /* Mobile styles */
  @media screen and (max-width: 749px) {
    .fullscreen-menu__inner {
      padding: 40px 25px;
      justify-content: flex-start; /* Align to top for better scrolling on mobile */
    }

    .fullscreen-menu__content {
      flex-direction: column;
    }

    .fullscreen-menu__left,
    .fullscreen-menu__right {
      padding: 0;
    }

    .fullscreen-menu__right {
      margin-top: 60px;
      align-items: flex-start;
    }

    .fullscreen-menu__browse-more {
      font-size: 42px;
      margin-bottom: 30px;
      text-align: left;
    }

    .fullscreen-menu__actions {
      margin-bottom: 40px;
      justify-content: flex-start;
    }

    .fullscreen-menu__category-list {
      max-height: 50vh; /* Smaller height on mobile */
    }

    .fullscreen-menu__category-link {
      font-size: 32px;
    }

    .fullscreen-menu__close-button {
      top: -20px;
      right: -5px;
    }

    .fullscreen-menu__close-icon {
      width: 26px;
      height: 26px;
    }

    .fullscreen-menu__login-button {
      padding: 10px 25px;
      font-size: 14px;
    }

    .fullscreen-menu__login-arrow {
      width: 16px;
      height: 16px;
    }

    .fullscreen-menu__shop-all {
      letter-spacing: 2px;
      margin-bottom: 30px;
    }

    .fullscreen-menu__footer-links {
      padding-top: 30px;
    }
  }

  /* Global styles */
  .overflow-hidden {
    overflow: hidden;
  }
</style>

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

{% liquid
  assign header_tag = 'div'

  if section.settings.sticky_header_type != 'none'
    assign header_tag = 'sticky-header'
  endif
%}

<{{ header_tag }}
  {% if header_tag == 'sticky-header' %}
    data-sticky-type="{{ section.settings.sticky_header_type }}"
    data-scroll-color-scheme="{{ section.settings.scroll_color_scheme }}"
    data-transparent="{{ section.settings.transparent_header }}"
  {% endif %}
  class="
    header-wrapper color-{{ section.settings.color_scheme }} gradient
    {% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}
    {% if section.settings.transparent_header %} header-wrapper--transparent{% endif %}
    {% unless request.page_type == 'index' %} header-wrapper--not-home{% endunless %}
  "
>
  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}
  <header
    class="header header--{{ section.settings.logo_position }} header--mobile-{{ section.settings.mobile_logo_position }} page-width{% if section.settings.menu_type_desktop == 'drawer' %} drawer-menu{% endif %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if social_links %} header--has-social{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}"
    id="shopify-section-header"
  >
    <!-- Left Section - Menu Button -->
    <div class="header__left">
      <button
        type="button"
        class="header__menu-button"
        aria-expanded="false"
        aria-controls="fullscreen-menu"
        id="burger-menu-toggle"
      >
        <svg class="header__menu-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M3 12H21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M3 6H21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M3 18H21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>

      <!-- Search Icon for Mobile - shown only on mobile -->
      <a
        href="{{ routes.search_url }}"
        class="header__icon-link header__icon-link--mobile-search"
        aria-label="{{ 'general.search.search' | t }}"
      >
        <svg class="header__icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M11 19C15.4183 19 19 15.4183 19 11C19 6.58172 15.4183 3 11 3C6.58172 3 3 6.58172 3 11C3 15.4183 6.58172 19 11 19Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M21 21L16.65 16.65" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </a>
    </div>

    <!-- Center Section - Logo -->
    <div class="header__center">
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
      <a href="{{ routes.root_url }}" class="header__logo">
        {%- if settings.logo != blank -%}
          <div class="header__heading-logo-container">
            <div class="header__heading-logo-wrapper">
              {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
              {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
              {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
              {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
              {{
                settings.logo
                | image_url: width: 600
                | image_tag:
                  class: 'header__logo-image',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
              }}
            </div>
            <!-- Lottie Animation Container -->
            <div id="header-logo-animation" class="header__heading-logo-animation"></div>
          </div>
        {%- else -%}
          <span>{{ shop.name }}</span>
        {%- endif -%}
      </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    </div>

    <!-- Right Section - Icons -->
    <div class="header__right">
      <!-- Search Icon -->
      <a
        href="{{ routes.search_url }}"
        class="header__icon-link header__icon-link--desktop-search"
        aria-label="{{ 'general.search.search' | t }}"
      >
        <svg class="header__icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M11 19C15.4183 19 19 15.4183 19 11C19 6.58172 15.4183 3 11 3C6.58172 3 3 6.58172 3 11C3 15.4183 6.58172 19 11 19Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M21 21L16.65 16.65" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </a>

      <!-- Account Icon -->
      {%- if shop.customer_accounts_enabled -%}
        <a
          href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
          class="header__icon-link"
          aria-label="{{ 'customer.account_fallback' | t }}"
        >
          <svg class="header__icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M20 21V19C20 17.9391 19.5786 16.9217 18.8284 16.1716C18.0783 15.4214 17.0609 15 16 15H8C6.93913 15 5.92172 15.4214 5.17157 16.1716C4.42143 16.9217 4 17.9391 4 19V21" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M12 11C14.2091 11 16 9.20914 16 7C16 4.79086 14.2091 3 12 3C9.79086 3 8 4.79086 8 7C8 9.20914 9.79086 11 12 11Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </a>
      {%- endif -%}

      <!-- Cart Icon -->
      <a
        href="{{ routes.cart_url }}"
        class="header__icon-link"
        id="cart-icon-bubble"
        aria-label="{{ 'templates.cart.cart' | t }}"
      >
        <svg class="header__icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M9 22C9.55228 22 10 21.5523 10 21C10 20.4477 9.55228 20 9 20C8.44772 20 8 20.4477 8 21C8 21.5523 8.44772 22 9 22Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M20 22C20.5523 22 21 21.5523 21 21C21 20.4477 20.5523 20 20 20C19.4477 20 19 20.4477 19 21C19 21.5523 19.4477 22 20 22Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M1 1H5L7.68 14.39C7.77144 14.8504 8.02191 15.264 8.38755 15.5583C8.75318 15.8526 9.2107 16.009 9.68 16H19.4C19.8693 16.009 20.3268 15.8526 20.6925 15.5583C21.0581 15.264 21.3086 14.8504 21.4 14.39L23 6H6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>
    </div>
  </header>
</{{ header_tag }}>

<!-- Full-screen Menu Drawer -->
<div id="fullscreen-menu" class="fullscreen-menu">
  <div class="fullscreen-menu__inner">
    <div class="fullscreen-menu__content">
      <!-- Close Button -->
      <button
        id="fullscreen-menu-close"
        class="fullscreen-menu__close-button"
        aria-label="{{ 'accessibility.close' | t }}"
      >
        <svg class="fullscreen-menu__close-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z" fill="currentColor"/>
        </svg>
      </button>

      <!-- Left Side - Categories -->
      <div class="fullscreen-menu__left">
        <div class="fullscreen-menu__shop-all">SHOP ALL</div>

        <nav class="fullscreen-menu__nav">
          <ul class="fullscreen-menu__category-list">
            {%- if section.settings.menu != blank -%}
              {%- for link in section.settings.menu.links -%}
                <li class="fullscreen-menu__category-item">
                  <a href="{{ link.url }}" class="fullscreen-menu__category-link">
                    {{ link.title | escape }}
                  </a>
                </li>
              {%- endfor -%}
            {%- endif -%}
          </ul>
        </nav>

        <div class="fullscreen-menu__footer-links">
          <a href="{{ routes.page_url | append: '/about' }}" class="fullscreen-menu__footer-link">About</a>
          <a href="{{ routes.page_url | append: '/contact' }}" class="fullscreen-menu__footer-link">Contact Us</a>
          <a href="{{ routes.policies_url | append: '/privacy-policy' }}" class="fullscreen-menu__footer-link"
            >Privacy Policy</a
          >
        </div>
      </div>

      <!-- Right Side - Browse More & Login -->
      <div class="fullscreen-menu__right">
        <div class="fullscreen-menu__browse-more">Browse More</div>

        <div class="fullscreen-menu__actions">
          <a
            href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}"
            class="fullscreen-menu__login-button"
          >
            Login
            <svg
              class="fullscreen-menu__login-arrow"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M16.172 11L10.808 5.63605L12.222 4.22205L20 12L12.222 19.778L10.808 18.364L16.172 13H4V11H16.172Z" fill="currentColor"/>
            </svg>
          </a>
        </div>

        {% comment %}
          <div class="fullscreen-menu__locale">
            <div class="fullscreen-menu__locale-selector">
              <button class="fullscreen-menu__selector-button">
                Egypt
                <svg
                  class="fullscreen-menu__selector-arrow"
                  viewBox="0 0 12 12"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path d="M6 8.5L2 4.5H10L6 8.5Z" fill="currentColor"/>
                </svg>
              </button>
            </div>

            <div class="fullscreen-menu__locale-selector">
              <button class="fullscreen-menu__selector-button">
                EGP
                <svg
                  class="fullscreen-menu__selector-arrow"
                  viewBox="0 0 12 12"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path d="M6 8.5L2 4.5H10L6 8.5Z" fill="currentColor"/>
                </svg>
              </button>
            </div>

            <div class="fullscreen-menu__locale-selector">
              <button class="fullscreen-menu__selector-button">
                EN
                <svg
                  class="fullscreen-menu__selector-arrow"
                  viewBox="0 0 12 12"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path d="M6 8.5L2 4.5H10L6 8.5Z" fill="currentColor"/>
                </svg>
              </button>
            </div>
          </div>
        {% endcomment %}
      </div>
    </div>
  </div>
</div>

{%- if settings.cart_type == 'notification' -%}
  {%- render 'cart-notification', color_scheme: section.settings.color_scheme -%}
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },
    {
      "type": "header",
      "content": "Color schemes"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Default state color scheme",
      "info": "Applied when the header is at the top of the page (not scrolled)",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "scroll_color_scheme",
      "label": "Scrolled state color scheme",
      "info": "Applied when the user has scrolled down the page",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__utilities.content"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_country_selector.label",
      "info": "t:sections.header.settings.enable_country_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": true,
      "label": "t:sections.header.settings.enable_language_selector.label",
      "info": "t:sections.header.settings.enable_language_selector.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    },
    {
      "type": "checkbox",
      "id": "transparent_header",
      "default": true,
      "label": "Transparent header",
      "info": "Makes the header transparent with white text before scrolling. When scrolled, uses the selected color scheme."
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}

<script>
  // Simple function to toggle the fullscreen menu
  function setupFullscreenMenu() {
    console.log('Setting up fullscreen menu');

    // Try multiple selectors to find the menu toggle button
    let menuToggle = document.querySelector('#burger-menu-toggle');
    if (!menuToggle) {
      console.log('Burger toggle not found by ID, trying class selector');
      menuToggle = document.querySelector('.header__menu-button');
    }

    const fullscreenMenu = document.getElementById('fullscreen-menu');
    const closeButton = document.getElementById('fullscreen-menu-close');

    console.log('Menu elements: ', {
      menuToggle: menuToggle ? true : false,
      fullscreenMenu: fullscreenMenu ? true : false,
      closeButton: closeButton ? true : false,
    });

    if (menuToggle && fullscreenMenu) {
      console.log('Adding click event to menu toggle');

      // Toggle menu when burger button is clicked
      menuToggle.onclick = function (event) {
        event.preventDefault();
        console.log('Menu toggle clicked');

        if (fullscreenMenu.classList.contains('fullscreen-menu--open')) {
          fullscreenMenu.classList.remove('fullscreen-menu--open');
          document.body.classList.remove('overflow-hidden');
          console.log('Menu closed');
        } else {
          fullscreenMenu.classList.add('fullscreen-menu--open');
          document.body.classList.add('overflow-hidden');
          console.log('Menu opened');
        }

        return false;
      };

      // Close menu when close button is clicked
      if (closeButton) {
        closeButton.onclick = function (event) {
          event.preventDefault();
          console.log('Close button clicked');
          fullscreenMenu.classList.remove('fullscreen-menu--open');
          document.body.classList.remove('overflow-hidden');
          return false;
        };
      }

      // Close menu when clicking on the overlay (background)
      fullscreenMenu.addEventListener('click', function (event) {
        // Get all the elements in the path from the click event to the top
        const path = event.composedPath();
        const clickedElement = event.target;

        // Check if click was on a background element, not on interactive elements
        const isBackgroundClick =
          // Direct click on fullscreen menu or its inner containers
          clickedElement === fullscreenMenu ||
          clickedElement.classList.contains('fullscreen-menu__inner') ||
          clickedElement.classList.contains('fullscreen-menu__content') ||
          // Check if click wasn't on an interactive element
          (!clickedElement.closest('a') &&
            !clickedElement.closest('button') &&
            !clickedElement.closest('input') &&
            !clickedElement.closest('.fullscreen-menu__category-item') &&
            !clickedElement.closest('.fullscreen-menu__locale-selector'));

        if (isBackgroundClick) {
          console.log('Background clicked, closing menu');
          fullscreenMenu.classList.remove('fullscreen-menu--open');
          document.body.classList.remove('overflow-hidden');
        }
      });

      // Make the toggle available globally for debugging
      window.toggleMenu = function () {
        console.log('Manual toggle');
        if (fullscreenMenu.classList.contains('fullscreen-menu--open')) {
          fullscreenMenu.classList.remove('fullscreen-menu--open');
          document.body.classList.remove('overflow-hidden');
        } else {
          fullscreenMenu.classList.add('fullscreen-menu--open');
          document.body.classList.add('overflow-hidden');
        }
      };
    } else {
      console.error('Could not find required elements for menu functionality');
    }
  }

  // Handle header scroll effect
  function setupHeaderScroll() {
    const header = document.getElementById('shopify-section-header');
    let headerAnimation = null;
    let hasAnimationPlayed = false;
    const animationPath = '/cdn/shop/t/4/assets/caldo91-logo-animation.json';

    // Initialize the animation when DOM is loaded
    if (typeof lottie !== 'undefined' && document.getElementById('header-logo-animation')) {
      const animationContainer = document.getElementById('header-logo-animation');

      // Check if the animation file exists
      fetch(animationPath, { method: 'HEAD' })
        .then((response) => {
          if (!response.ok) {
            console.warn('Header animation file not found, animation will not play');
            return;
          }

          // Animation file exists, proceed with loading
          // Clear any existing content
          animationContainer.innerHTML = '';

          // Load the animation but don't autoplay yet
          headerAnimation = lottie.loadAnimation({
            container: animationContainer,
            renderer: 'svg',
            loop: false, // Don't loop - play only once
            autoplay: false, // Don't autoplay on load
            path: animationPath,
            rendererSettings: {
              preserveAspectRatio: 'xMidYMid meet',
              clearCanvas: false,
              progressiveLoad: true,
              hideOnTransparent: true,
            },
          });

          // Set the SVG quality to high
          headerAnimation.setSubframe(false);

          // Add error handling for animation loading
          headerAnimation.addEventListener('data_failed', () => {
            console.error('Failed to load the logo animation file from:', animationPath);
          });

          // Apply fixed height to SVG after it's loaded
          headerAnimation.addEventListener('DOMLoaded', () => {
            // Get the SVG element that Lottie created
            const svg = animationContainer.querySelector('svg');
            if (svg) {
              // Set fixed height and preserve aspect ratio
              svg.setAttribute('height', '90px');
              svg.style.height = '90px';
              svg.style.width = 'auto';
            }
          });

          // Reset flag when animation completes
          headerAnimation.addEventListener('complete', () => {
            console.log('Header animation complete');
          });
        })
        .catch((error) => {
          console.error('Error checking animation file:', error);
        });
    }

    if (header) {
      window.addEventListener('scroll', function () {
        const isScrolled = window.scrollY > 50;

        if (isScrolled) {
          header.classList.add('header--scrolled');
          document.documentElement.classList.add('scrolled-past-header');

          // Play animation only if it hasn't been played yet in this scroll session
          if (headerAnimation && !hasAnimationPlayed) {
            headerAnimation.goToAndPlay(0, true);
            hasAnimationPlayed = true;
          }
        } else {
          header.classList.remove('header--scrolled');
          document.documentElement.classList.remove('scrolled-past-header');

          // Reset the animation flag when scrolled back to top
          hasAnimationPlayed = false;

          // Reset the animation to first frame when scrolled back up
          if (headerAnimation) {
            headerAnimation.goToAndStop(0, true);
          }
        }
      });
    }
  }

  // Initialize when the DOM is loaded
  document.addEventListener('DOMContentLoaded', function () {
    console.log('Initializing menu and header functionality');
    setupFullscreenMenu();
    setupHeaderScroll();
    setupCartUpdates();

    // Ensure Lottie is loaded
    if (typeof lottie === 'undefined') {
      console.warn('Lottie library not loaded, attempting to load it');
      const script = document.createElement('script');
      script.src = 'https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.9.6/lottie.min.js';
      script.onload = function () {
        console.log('Lottie library loaded dynamically');
        setupHeaderScroll(); // Re-initialize header scroll to set up animation
      };
      document.head.appendChild(script);
    }
  });

  // Setup cart update handlers
  function setupCartUpdates() {
    // Listen for cart updates (using Shopify's cart change event)
    document.addEventListener('cart:refresh', updateCartCount);
    document.addEventListener('cart:change', updateCartCount);
    document.addEventListener('cart:updated', updateCartCount);

    // Also update on page load
    updateCartCount();

    // Function to update the cart count
    function updateCartCount() {
      fetch('/cart.js')
        .then((response) => response.json())
        .then((cart) => {
          const cartCountBubble = document.querySelector('.cart-count-bubble');
          const cartIconBubble = document.getElementById('cart-icon-bubble');

          if (cart.item_count > 0) {
            // If there's already a bubble, just update the count
            if (cartCountBubble) {
              const countSpan = cartCountBubble.querySelector('[aria-hidden="true"]');
              if (countSpan) {
                // Check if count changed
                if (countSpan.textContent != (cart.item_count < 100 ? cart.item_count : '99+')) {
                  countSpan.textContent = cart.item_count < 100 ? cart.item_count : '99+';

                  // Reset animation by removing and re-adding the class
                  cartCountBubble.style.animation = 'none';
                  setTimeout(() => {
                    cartCountBubble.style.animation = 'cart-bubble-pulse 0.5s ease-out';
                  }, 10);
                } else {
                  countSpan.textContent = cart.item_count < 100 ? cart.item_count : '99+';
                }
              }
            }
            // Otherwise create a new bubble
            else if (cartIconBubble) {
              const newBubble = document.createElement('div');
              newBubble.className = 'cart-count-bubble';

              const countSpan = document.createElement('span');
              countSpan.setAttribute('aria-hidden', 'true');
              countSpan.textContent = cart.item_count < 100 ? cart.item_count : '99+';

              const srSpan = document.createElement('span');
              srSpan.className = 'visually-hidden';
              srSpan.textContent = cart.item_count + ' items';

              newBubble.appendChild(countSpan);
              newBubble.appendChild(srSpan);
              cartIconBubble.appendChild(newBubble);
            }
          }
          // Remove bubble if cart is empty
          else if (cartCountBubble) {
            cartCountBubble.remove();
          }
        })
        .catch((error) => console.error('Error fetching cart:', error));
    }
  }
</script>

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: '?q={search_term_string}' %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}
