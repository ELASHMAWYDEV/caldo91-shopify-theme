{{ 'section-multi-image-scroll-section.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .multi-image-scroll-section--{{ section.id }} .multi-image-scroll-section__image-overlay {
    opacity: {{ section.settings.image_overlay_opacity | divided_by: 100.0 }};
    background-color: {{ section.settings.image_overlay_color }};
  }

  /* Import Montserrat font */
  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap');
{%- endstyle -%}

{%- liquid
  assign widths = '375, 550, 750, 1100, 1500, 1780, 2000, 3000, 3840'
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif
-%}

<div
  class="multi-image-scroll-section multi-image-scroll-section--{{ section.id }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--fade-in{% endif %}"
  data-section-id="{{ section.id }}"
  data-section-type="multi-image-scroll-section"
>
  <div class="multi-image-scroll-section__container">
    <div class="multi-image-scroll-section__images">
      {%- for block in section.blocks -%}
        <div
          class="multi-image-scroll-section__slide {% if forloop.first %}active{% endif %}"
          data-slide-index="{{ forloop.index0 }}"
          {{ block.shopify_attributes }}
        >
          {%- if block.settings.image != blank -%}
            <div class="multi-image-scroll-section__image-wrapper">
              {%- liquid
                assign image_height = block.settings.image.width | divided_by: block.settings.image.aspect_ratio
                assign current_fetch_priority = 'low'
                if forloop.first and section.index <= 2
                  assign current_fetch_priority = fetch_priority
                endif
              -%}
              {{
                block.settings.image
                | image_url: width: 3840
                | image_tag:
                  width: block.settings.image.width,
                  height: image_height,
                  class: 'multi-image-scroll-section__image',
                  sizes: '100vw',
                  widths: widths,
                  fetchpriority: current_fetch_priority
              }}
              <div class="multi-image-scroll-section__image-overlay"></div>
            </div>
          {%- else -%}
            <div class="multi-image-scroll-section__image-wrapper placeholder">
              {{ 'image' | placeholder_svg_tag: 'placeholder-svg' }}
            </div>
          {%- endif -%}
        </div>
      {%- endfor -%}
    </div>

    <div class="multi-image-scroll-section__titles-container">
      <div class="multi-image-scroll-section__titles">
        {%- for block in section.blocks -%}
          <div
            class="multi-image-scroll-section__title-item {% if forloop.first %}active{% endif %}"
            data-title-index="{{ forloop.index0 }}"
            {{ block.shopify_attributes }}
          >
            {%- if block.settings.link != blank -%}
              <a href="{{ block.settings.link }}" class="multi-image-scroll-section__title-link">
                <h2 class="multi-image-scroll-section__title">{{ block.settings.title }}</h2>
              </a>
            {%- else -%}
              <h2 class="multi-image-scroll-section__title">{{ block.settings.title }}</h2>
            {%- endif -%}
          </div>
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const section = document.querySelector('.multi-image-scroll-section--{{ section.id }}');
    if (!section) return;

    const slides = section.querySelectorAll('.multi-image-scroll-section__slide');
    const titles = section.querySelectorAll('.multi-image-scroll-section__title-item');

    // Check if section is in viewport to add/remove entrance animation
    const sectionObserverOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 0.15,
    };

    function handleSectionVisibility(entries) {
      entries.forEach((entry) => {
        // Add class when entering, remove when exiting
        if (entry.isIntersecting) {
          section.classList.add('section-in-view');
        } else {
          section.classList.remove('section-in-view');
        }
      });
    }

    const sectionObserver = new IntersectionObserver(handleSectionVisibility, sectionObserverOptions);
    sectionObserver.observe(section);

    // Create IntersectionObserver for slide detection
    const slideObserverOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 0.6, // Increase threshold for better detection
    };

    function handleIntersection(entries) {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const slideIndex = entry.target.dataset.slideIndex;

          // Remove active class from all slides and titles
          slides.forEach((slide) => slide.classList.remove('active'));
          titles.forEach((title) => title.classList.remove('active'));

          // Add active class to current slide and title
          entry.target.classList.add('active');
          const activeTitle = section.querySelector(
            `.multi-image-scroll-section__title-item[data-title-index="${slideIndex}"]`
          );
          if (activeTitle) {
            activeTitle.classList.add('active');
          }
        }
      });
    }

    const slideObserver = new IntersectionObserver(handleIntersection, slideObserverOptions);
    slides.forEach((slide) => {
      slideObserver.observe(slide);
    });

    // Add smooth scrolling when clicking on titles
    titles.forEach((title) => {
      // Only add click event for scrolling to slide if it's not an actual link
      const titleLink = title.querySelector('.multi-image-scroll-section__title-link');

      if (!titleLink) {
        title.addEventListener('click', function () {
          const titleIndex = this.dataset.titleIndex;
          const targetSlide = section.querySelector(
            `.multi-image-scroll-section__slide[data-slide-index="${titleIndex}"]`
          );

          if (targetSlide) {
            targetSlide.scrollIntoView({ behavior: 'smooth' });
          }
        });
      }
    });
  });
</script>

{% schema %}
{
  "name": "Multi Image Scroll",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "color",
      "id": "image_overlay_color",
      "label": "Image overlay color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "image_overlay_opacity",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "%",
      "label": "Image overlay opacity",
      "default": 0
    }
  ],
  "blocks": [
    {
      "type": "image_with_title",
      "name": "Image with Title",
      "limit": 5,
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Collection Title"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Link text",
          "default": "View Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Multi Image Scroll",
      "blocks": [
        {
          "type": "image_with_title"
        },
        {
          "type": "image_with_title"
        },
        {
          "type": "image_with_title"
        }
      ]
    }
  ]
}
{% endschema %}
